<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

<!-- bean配置形式一:通过注解 -->
	<!-- 需配置 mvc:annotation-driven 标签,开启注解支持-->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- 配置自定扫描的包 -->
	<context:component-scan base-package="com.live.test.javaee.springmvc"></context:component-scan>
	<context:component-scan base-package="com.live.test.javaee.mybatis"></context:component-scan>

<!-- bean配置形式二:通过xml配置文件-->
<!-- <import resource="applicationContext.xml"/> -->

	<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置视图  BeanNameViewResolver 解析器: 使用视图的名字来解析视图 -->
	<!-- 通过 order 属性来定义视图解析器的优先级, order 值越小优先级越高 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="100"></property>
	</bean>
	
	<!-- 配置国际化资源文件 -->
	<!-- <bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n"></property>	
	</bean> -->
	
	<!-- 配置直接转发的页面 -->
	<!-- 可以直接相应转发的页面, 而无需再经过 Handler 的方法.  -->
	<mvc:view-controller path="/success" view-name="success"/>
	
	
	<!-- 整合mybatis -->
	<!-- 加载数据库配置文件 -->
    <!-- <context:property-placeholder location="classpath:resource/mybatis/db.properties"/> -->
    <context:property-placeholder location="classpath:mybatis/db.properties"/>
<!-- 
    数据库连接池
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        配置连接池属性
        <property name="driverClass" value="${jdbc_driver}"/>
        <property name="jdbcUrl" value="${jdbc_url}"/>
        <property name="user" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>

        c3p0连接池的私有属性
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        关闭连接后不自动commit
        <property name="autoCommitOnClose" value="false" />
        获取连接超时时间
        <property name="checkoutTimeout" value="10000" />
        当获取连接失败重试次数
        <property name="acquireRetryAttempts" value="2" />
    </bean>
     -->
    <!-- 数据源设置 -->
	<bean id="dataSource" scope="singleton"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<!-- <property name="url" value="jdbc:mysql://192.168.1.60:3306/beishida?useUnicode=true&amp;characterEncoding=UTF-8&amp;useServerPrepStmts=false&amp;rewriteBatchedStatements=true" />
		<property name="username" value="root" />
		<property name="password" value="spzc1234" /> -->
		
		<property name="url" value="jdbc:mysql://192.168.1.51:3306/spim2?useUnicode=true&amp;characterEncoding=UTF-8&amp;useServerPrepStmts=false&amp;rewriteBatchedStatements=true" />
		<property name="username" value="root" />
		<property name="password" value="spzc1234" />
		
 		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="2000" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,mergeStat,log4j2" />
	</bean>
    
    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描pojo包，使用别名配置(在mybatis中可以使用别名，即pojo的名称) -->
       <!--  <property name="typeAliasesPackage" value="cn.tycoding.pojo"/> -->

        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>

        <!-- 扫描Mapper层的配置文件 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/EvaluateMapper.xml"/>
    </bean>
    
    <!-- 使用mybatis的接口代理开发模式(必须保证接口和对应的mybatis的xml名称相同，且在一个文件夹内) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描mapper的配置文件 -->
        <property name="basePackage" value="com.live.test.javaee.mybatis.mapper"/>

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    
</beans>
