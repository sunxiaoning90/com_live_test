装饰器模式
定义:允许向一个现有的对象添加新的功能，同时又不改变其结构。这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。
这种模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能。

意图：动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。

主要解决：一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。

何时使用：在不想增加很多子类的情况下扩展类。

如何解决：将具体功能职责划分，同时继承装饰者模式。

优点：装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式是继承的一个替代模式，装饰模式可以动态扩展一个实现类的功能。

缺点：多层装饰比较复杂。

使用场景： 1、扩展一个类的功能。 2、动态增加功能，动态撤销。

-----------
demo
奶茶店的奶茶有不同种类,归根最核心的是奶茶,只是对它添加一些附加品,如冰\珍珠,于是变为了珍珠奶茶\冰奶茶\冰珍珠奶茶

实现
IMilktea:接口,奶茶
Milktea:实现类,普通奶茶

IceMilktea:实现类,装饰器,对Milktea进行装饰
PearlMilktea:实现类,装饰器,对Milktea进行装饰

小结:
使用了装饰器模式可以按需一层一层包装,如果使用继承的方式,需要很多个实现类:ice,pearl,icepearl...
